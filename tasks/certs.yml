---
- name: Ensure private_directory exists
  file:
    path: "{{private_directory}}"
    state: directory

- name: Ensure csr_directory exists
  file:
    path: "{{csr_directory}}"
    state: directory

- name: Ensure certs_directory exists
  file:
    path: "{{certs_directory}}"
    state: directory

- name: Generate account key
  openssl_privatekey:
    path: "{{private_directory}}/acme_account.pem"
    mode: u=rw,g=r,o-rwx

- name: Generate CSR private key
  openssl_privatekey:
    path: "{{private_directory}}/acme_csr_key.pem"
    mode: u=rw,g=r,o-rwx

- name: Default cert signing request
  openssl_csr:
    path: "{{csr_directory}}/acme.csr"
    privatekey_path: "{{private_directory}}/acme_csr_key.pem"
    common_name: "{{sites | map(attribute='host') | first}}"
    country_name: "US"
    email_address: "{{acme_account_email}}"
    subject_alt_name: "{{sites | map(attribute='host') | map('regex_replace', '^', 'DNS:') | list}}"
  register: csr_state

- name: Check Cert
  acme_certificate:
    account_email: "{{acme_account_email}}"
    account_key_src: "{{private_directory}}/acme_account.pem"
    acme_directory: "{{acme_directory}}"
    challenge: http-01
    csr: "{{csr_directory}}/acme.csr"
    dest: "{{certs_directory}}/acme.pem"
    acme_version: 2
    terms_agreed: yes
    force: "{{csr_state is changed}}"
  register: acme_challenge

- name: Fufill challenges
  when: acme_challenge is changed
  block:
  - name: Ensure acme-challenge dir exists
    file:
      path: /var/www/html/.well-known/acme-challenge
      state: directory
  - name: Put the challenge data in www root
    with_dict: "{{ acme_challenge.challenge_data }}"
    copy:
      content: "{{item.value['http-01']['resource_value']}}"
      dest: "/var/www/html/{{item.value['http-01']['resource']}}"
  - name: Configure nginx to serve the challenge response
    template:
      src: acme_verify.conf.j2
      dest: /etc/nginx/nginx.conf
  - name: Restart nginx
    service:
      name: nginx
      state: restarted

- name: Verify and install the cert
  acme_certificate:
    account_email: "{{acme_account_email}}"
    account_key_src: /etc/ssl/private/acme_account.pem
    acme_directory: "{{acme_directory}}"
    challenge: http-01
    csr: "{{csr_directory}}/acme.csr"
    dest: "{{certs_directory}}/acme.pem"
    data: "{{acme_challenge}}"
    acme_version: 2
    terms_agreed: yes